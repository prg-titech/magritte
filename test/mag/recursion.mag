require test/framework.mag

test iter (=>
  iter [add 1] 0 | each mul 3 | take 1

  # TODO: fix wait-for-close so we can actually test the output lol
  eq 1 1
)

test alternating-iter (=>
  iter (
    [a ?x] => put [b (add 1 $x)]
    [b ?y] => put [a (add 2 $y)]
  ) [a 1]
  | take 10

  eq 1 1
)

test pipe-cases (=>
  (
    put [a 1]
    put [b 2]
    put [a 3]
    put [b 4]
    put [c done]
  ) | each (
    [a ?x] => put [a (mul 10 $x)]
    [b ?y] => put [b (mul 100 $y)]
    [c ?z] => put cool
  )

  # `each` is falsey, since it can be interrupted
  eq 1 1
)
